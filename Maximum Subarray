#include <bits/stdc++.h>
using namespace std;
 
#define int long long int
#define ld long double
#define pb push_back
#define sp(x,y)  fixed<<setprecision(y)<<x;
#define inf 9223372036854775807
#define all(x) begin(x), end(x)
#define el "\n"
#define vi vector<int>
#define vvi vector<vector<int>>
#define vpi vector<pair<int,int>>
#define vvpi vector<vector<pair<int,int>>>
#define inf 9223372036854775807
const int mod = 998244353;
const int MAX = 5e5+5;

vector<int> gph[MAX];
bool vis[MAX];
void dfs(int ver,int mx,vector<int>&ans)
{
   vis[ver]=true;
   ans[ver]=mx;
    for(auto v:gph[ver]){
        if(!vis[v]){
        dfs(v,max(ans[v],mx),ans);
      }
    }
   
}
int dfs(int ver)
{
   vis[ver]=true;
   int ans=1;
    for(auto v:gph[ver]){
        if(!vis[v]){
        ans+=dfs(v);
      }
    }
    return ans;
}
 
int32_t main() {
ios::sync_with_stdio(0);cout.tie(0);cin.tie(0);
    int t=1;
    cin>>t;
    while(t--){
     int n;
     cin>>n;
  vector<int>v(n),w;
  int sum=0,mxind=0;
  for(int i=0;i<n;i++)
  {
    cin>>v[i];

 }

  int m;
  cin>>m;
  vector<int>b(m);
  for(int i=0;i<m;i++)
  {
    cin>>b[i];
    if(b[i]>0)
    w.pb(b[i]);

 } 

 for(int i=0;i<n;i++)
    w.pb(v[i]);

  for(int i=0;i<m;i++)
  {
    
    if(b[i]>0)
    v.pb(b[i]);

 } 
 int ans=(-1e8)-5;
 int mxsum=(-1e8)-5;
 for(int i=0;i<v.size();i++)
 {
     sum+=v[i];
     mxsum=max(mxsum,sum);
     if(sum<0)
        sum=0;
 }
ans=max(ans,mxsum);

sum=0;
mxsum=(-1e8)-5;
 for(int i=0;i<w.size();i++)
 {

     sum+=w[i];
     mxsum=max(mxsum,sum);
     if(sum<0)
        sum=0;
 }

ans=max(ans,mxsum);

cout<<ans<<el;
 



}

    return 0;
}
