 

public class TrappedRainWatter {

    public static int trappedRainwater(int height[]){
        int n=height.length;
        //calculate left boundary
         int leftMax[]=new int[n];
         leftMax[0]=height[0];
         for(int i=1;i<n;i++){
            leftMax[i]=Math.max(height[i],leftMax[i-1]);
         }
        //calculate right max boundary
        int rightMax[]=new int[n];
        rightMax[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            rightMax[i]=Math.max(height[i],rightMax[i+1]);
        }
       
        //loop
        int trappedWater=0;
       for(int i=0;i<n;i++){
          //waterlevel=min(left max ,right max)
       
          int water_level=Math.min(leftMax[i],rightMax[i]);
         //trappedwatter=water level-height
          trappedWater+=water_level-height[i];
       }
      
        return trappedWater;
    }


    public static int trapwater(int arr[]){
        int  n=arr.length;
        int leftmax[]=new int[n];
        int rightax[]=new int[n];
        int max=0;
        for(int i=0;i<n;i++){
            max=Math.max(max, arr[i]);
            leftmax[i]=max;
        }
          max=0;
        for(int i=n-1;i>=0;i--){
            max=Math.max(max, arr[i]);
            rightax[i]=max;
        }
      int total=0;
        for(int i=n-1;i>=0;i--){
            int water=Math.min(leftmax[i], rightax[i]) - arr[i];
            total+=water;
        }
         return total;

    } 



    public static void main(String[] args) {
        int height[]={4,2,0,6,3,2,5};
        int arr[]={0,1,0,2,1,0,1,3,2,1,2,1};
        System.out.println(trapwater(arr));
    }
}
